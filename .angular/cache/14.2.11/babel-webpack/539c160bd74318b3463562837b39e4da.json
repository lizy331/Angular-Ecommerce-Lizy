{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar toObject = require('../internals/to-object');\n\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\nvar setArrayLength = require('../internals/array-set-length');\n\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\n\nvar fails = require('../internals/fails');\n\nvar INCORRECT_TO_LENGTH = fails(function () {\n  return [].push.call({\n    length: 0x100000000\n  }, 1) !== 4294967297;\n}); // V8 and Safari <= 15.4, FF < 23 throws InternalError\n// https://bugs.chromium.org/p/v8/issues/detail?id=12681\n\nvar properErrorOnNonWritableLength = function () {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', {\n      writable: false\n    }).push();\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n};\n\nvar FORCED = INCORRECT_TO_LENGTH || !properErrorOnNonWritableLength(); // `Array.prototype.push` method\n// https://tc39.es/ecma262/#sec-array.prototype.push\n\n$({\n  target: 'Array',\n  proto: true,\n  arity: 1,\n  forced: FORCED\n}, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  push: function push(item) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var argCount = arguments.length;\n    doesNotExceedSafeInteger(len + argCount);\n\n    for (var i = 0; i < argCount; i++) {\n      O[len] = arguments[i];\n      len++;\n    }\n\n    setArrayLength(O, len);\n    return len;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}