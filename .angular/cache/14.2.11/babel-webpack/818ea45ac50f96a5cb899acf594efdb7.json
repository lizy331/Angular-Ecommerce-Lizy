{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let CartService = /*#__PURE__*/(() => {\n  class CartService {\n    constructor() {\n      this.cartItems = [];\n      this.totalPrice = new Subject();\n      this.totalQuantity = new Subject();\n    }\n\n    addToCart(theCartItem) {\n      // check if the item exist\n      let alreadyExistsInCart = false;\n      let existingCartItem; // find the item in the cart based on item id\n\n      if (this.cartItems.length > 0) {\n        for (let tempCartItem of this.cartItems) {\n          if (tempCartItem.id === theCartItem.id) {\n            existingCartItem = tempCartItem;\n            break;\n          }\n        }\n      } // check if we fond it\n\n\n      alreadyExistsInCart = existingCartItem !== undefined; // console.log(`if the item existed or not ${alreadyExistsInCart}`);\n\n      if (alreadyExistsInCart == true) {\n        existingCartItem.quantity++; // console.log(`updating quantity: ${existingCartItem.quantity}`);\n      } else {\n        // a new item is going to add to the cart\n        this.cartItems.push(theCartItem);\n      } // compute the total price of the cart \n\n\n      this.computeCartTotals();\n    }\n\n    computeCartTotals() {\n      let totalPriceVaule = 0;\n      let totalQuantityValue = 0;\n\n      for (let currentCartItem of this.cartItems) {\n        // console.log(`current item in the cart:`);\n        // console.log(`name: ${currentCartItem.name}, quantity=${currentCartItem.quantity}, unitePrice=${currentCartItem.unitPrice}`);\n        totalPriceVaule += currentCartItem.quantity * currentCartItem.unitPrice;\n        totalQuantityValue += currentCartItem.quantity;\n      } // publish the new value to all subscribers, all the subscribers will received the new data\n\n\n      this.totalPrice.next(totalPriceVaule);\n      this.totalQuantity.next(totalQuantityValue); // log the cart data\n\n      this.logCartData(totalPriceVaule, totalQuantityValue);\n    }\n\n    logCartData(totalPriceVaule, totalQuantityValue) {\n      console.log(`Contents of the cart:`);\n\n      for (let tempCartItem of this.cartItems) {\n        const subTotalPriceValue = tempCartItem.quantity * tempCartItem.unitPrice;\n        console.log(`name: ${tempCartItem.name}, quantity=${tempCartItem.quantity}, unitePrice=${tempCartItem.unitPrice}, subtotalPrice = ${subTotalPriceValue}`);\n      }\n\n      console.log(`totalPrice: ${totalPriceVaule.toFixed(2)}, totalQuantity: ${totalQuantityValue}`);\n      console.log(`----`);\n    }\n\n    decrementQuantity(theCartItem) {\n      theCartItem.quantity--;\n\n      if (theCartItem.quantity === 0) {\n        this.remove(theCartItem);\n      } else {\n        this.computeCartTotals();\n      }\n    }\n\n    remove(theCartItem) {\n      // get index of the item in the array\n      const itemIndex = this.cartItems.findIndex(theCartItem => tempCartItem.id === theCartItem.id); // if found, remove the item from the array\n    }\n\n  }\n\n  CartService.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)();\n  };\n\n  CartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root'\n  });\n  return CartService;\n})();","map":null,"metadata":{},"sourceType":"module"}