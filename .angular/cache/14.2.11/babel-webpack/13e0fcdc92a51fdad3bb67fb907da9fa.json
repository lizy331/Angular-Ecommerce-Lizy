{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar aCallable = require('../internals/a-callable');\n\nvar aMap = require('../internals/a-map');\n\nvar MapHelpers = require('../internals/map-helpers');\n\nvar $TypeError = TypeError;\nvar get = MapHelpers.get;\nvar has = MapHelpers.has;\nvar set = MapHelpers.set; // `Map.prototype.update` method\n// https://github.com/tc39/proposal-collection-methods\n\n$({\n  target: 'Map',\n  proto: true,\n  real: true,\n  forced: true\n}, {\n  update: function update(key, callback\n  /* , thunk */\n  ) {\n    var map = aMap(this);\n    var length = arguments.length;\n    aCallable(callback);\n    var isPresentInMap = has(map, key);\n\n    if (!isPresentInMap && length < 3) {\n      throw $TypeError('Updating absent value');\n    }\n\n    var value = isPresentInMap ? get(map, key) : aCallable(length > 2 ? arguments[2] : undefined)(key, map);\n    set(map, key, callback(value, key, map));\n    return map;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}