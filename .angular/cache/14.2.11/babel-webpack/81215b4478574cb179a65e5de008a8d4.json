{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Lizy2ShopValidators } from 'src/app/validators/lizy2-shop-validators';\nlet CheckoutComponent = class CheckoutComponent {\n  constructor(formBuilder, lizy2ShopFormService) {\n    this.formBuilder = formBuilder;\n    this.lizy2ShopFormService = lizy2ShopFormService;\n    this.checkoutFormGroup = new FormGroup({});\n    this.totalPrice = 0;\n    this.totalQuantity = 0;\n    this.creditCardMonths = [];\n    this.creditCardYears = [];\n    this.countries = [];\n    this.shippingAddressStates = [];\n    this.billingAddressStates = [];\n  }\n\n  ngOnInit() {\n    this.checkoutFormGroup = this.formBuilder.group({\n      customer: this.formBuilder.group({\n        firstName: new FormControl('', [Validators.required, Validators.minLength(2), Lizy2ShopValidators.notOnlyWhitespace]),\n        lastName: new FormControl('', [Validators.required, Validators.minLength(2), Lizy2ShopValidators.notOnlyWhitespace]),\n        email: new FormControl('', [Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$'), Lizy2ShopValidators.notOnlyWhitespace])\n      }),\n      shippingAddress: this.formBuilder.group({\n        street: new FormControl('', [Validators.required, Validators.minLength(2), Lizy2ShopValidators.notOnlyWhitespace]),\n        city: new FormControl('', [Validators.required, Validators.minLength(2), Lizy2ShopValidators.notOnlyWhitespace]),\n        state: new FormControl('', [Validators.required]),\n        country: new FormControl('', [Validators.required]),\n        zip: new FormControl('', [Validators.required, Validators.minLength(2), Lizy2ShopValidators.notOnlyWhitespace])\n      }),\n      billingAddress: this.formBuilder.group({\n        street: new FormControl('', [Validators.required, Validators.minLength(2), Lizy2ShopValidators.notOnlyWhitespace]),\n        city: new FormControl('', [Validators.required, Validators.minLength(2), Lizy2ShopValidators.notOnlyWhitespace]),\n        state: new FormControl('', [Validators.required]),\n        country: new FormControl('', [Validators.required]),\n        zip: new FormControl('', [Validators.required, Validators.minLength(2), Lizy2ShopValidators.notOnlyWhitespace])\n      }),\n      creditCard: this.formBuilder.group({\n        cardType: new FormControl('', [Validators.required]),\n        nameOnCard: new FormControl('', [Validators.required, Validators.minLength(2), Lizy2ShopValidators.notOnlyWhitespace]),\n        cardNumber: new FormControl('', [Validators.required, Validators.pattern('[0-9]{16}')]),\n        securityCode: new FormControl('', [Validators.required, Validators.pattern('[0-9]{3}')]),\n        expirationMonth: [''],\n        expirationYear: ['']\n      })\n    }); // pupolate credit ard month\n\n    const startMonth = new Date().getMonth() + 1;\n    console.log(\"startMonth: \" + startMonth);\n    this.lizy2ShopFormService.getCriditCardMonths(startMonth).subscribe(data => {\n      console.log(\"Retrived credit card months: \" + JSON.stringify(data));\n      this.creditCardMonths = data;\n    }); // populate redit card year\n\n    this.lizy2ShopFormService.getCriditCardYears().subscribe(data => {\n      console.log(\"Retrived credit card years: \" + JSON.stringify(data));\n      this.creditCardYears = data;\n    }); // populate  countries\n\n    this.lizy2ShopFormService.getCountries().subscribe(data => {\n      console.log(\"Reterived Countries: \" + JSON.stringify(data));\n      this.countries = data;\n    });\n  }\n\n  onSubmit() {\n    var _a, _b, _c, _d;\n\n    console.log(\"handling submit button\");\n\n    if (this.checkoutFormGroup.invalid) {\n      this.checkoutFormGroup.markAllAsTouched();\n    }\n\n    console.log((_a = this.checkoutFormGroup.get('customer')) === null || _a === void 0 ? void 0 : _a.value);\n    console.log(\"The email address is \" + ((_b = this.checkoutFormGroup.get('customer')) === null || _b === void 0 ? void 0 : _b.value.email));\n    console.log(\"the shipping address country is \" + ((_c = this.checkoutFormGroup.get('shippingAddress')) === null || _c === void 0 ? void 0 : _c.value.country.name));\n    console.log(\"the shipping address state is \" + ((_d = this.checkoutFormGroup.get('shippingAddress')) === null || _d === void 0 ? void 0 : _d.value.state.name));\n  }\n\n  get firstName() {\n    return this.checkoutFormGroup.get('customer.firstName');\n  }\n\n  get lastName() {\n    return this.checkoutFormGroup.get('customer.lastName');\n  }\n\n  get email() {\n    return this.checkoutFormGroup.get('customer.email');\n  }\n\n  get shippingAddressStreet() {\n    return this.checkoutFormGroup.get('shippingAddress.street');\n  }\n\n  get shippingAddressCity() {\n    return this.checkoutFormGroup.get('shippingAddress.city');\n  }\n\n  get shippingAddressState() {\n    return this.checkoutFormGroup.get('shippingAddress.state');\n  }\n\n  get shippingAddressZipCode() {\n    return this.checkoutFormGroup.get('shippingAddress.zip');\n  }\n\n  get shippingAddressCountry() {\n    return this.checkoutFormGroup.get('shippingAddress.country');\n  }\n\n  get billingAddressStreet() {\n    return this.checkoutFormGroup.get('billingAddress.street');\n  }\n\n  get billingAddressCity() {\n    return this.checkoutFormGroup.get('billingAddress.city');\n  }\n\n  get billingAddressState() {\n    return this.checkoutFormGroup.get('billingAddress.state');\n  }\n\n  get billingAddressZipCode() {\n    return this.checkoutFormGroup.get('billingAddress.zip');\n  }\n\n  get billingAddressCountry() {\n    return this.checkoutFormGroup.get('billingAddress.country');\n  }\n\n  get creditCardType() {\n    return this.checkoutFormGroup.get('creditCard.cardType');\n  }\n\n  get creditCardNameOnCard() {\n    return this.checkoutFormGroup.get('creditCard.nameOnCard');\n  }\n\n  get creditCardNumber() {\n    return this.checkoutFormGroup.get('creditCard.cardNumber');\n  }\n\n  get creditCardSecurityCode() {\n    return this.checkoutFormGroup.get('creditCard.securityCode');\n  }\n\n  copyShippingAddressToBillingAddress(event) {\n    if (event.target.checked) {\n      this.checkoutFormGroup.controls.billingAddress.setValue(this.checkoutFormGroup.controls.shippingAddress.value);\n      this.billingAddressStates = this.shippingAddressStates;\n    } else {\n      this.checkoutFormGroup.controls.billingAddress.reset();\n      this.billingAddressStates = [];\n    }\n  }\n\n  handleMonthsAndYears() {\n    const creditCardFormGroup = this.checkoutFormGroup.get('creditCard');\n\n    if (creditCardFormGroup) {\n      const currentYear = new Date().getFullYear();\n      const selectedYear = Number(creditCardFormGroup.value.expirationYear); // if the current year is the selected year, then start from the current month\n\n      let startMonth;\n\n      if (currentYear === selectedYear) {\n        startMonth = new Date().getMonth() + 1;\n      } else {\n        startMonth = 1;\n      }\n\n      this.lizy2ShopFormService.getCriditCardMonths(startMonth).subscribe(data => {\n        console.log(\"Retrived credit card months: \" + JSON.stringify(data));\n        this.creditCardMonths = data;\n      });\n    }\n  }\n\n  getStates(formGroupName) {\n    const formGroup = this.checkoutFormGroup.get(formGroupName);\n    const countryCode = formGroup === null || formGroup === void 0 ? void 0 : formGroup.value.country.code;\n    const countryName = formGroup === null || formGroup === void 0 ? void 0 : formGroup.value.country.name;\n    console.log(`${formGroupName} country code: ${countryCode}`);\n    console.log(`${formGroupName} country name: ${countryName}`);\n    this.lizy2ShopFormService.getStates(countryCode).subscribe(data => {\n      var _a;\n\n      if (formGroupName === 'shippingAddress') {\n        this.shippingAddressStates = data;\n      } else {\n        this.billingAddressStates = data;\n      } //select the first state by default\n\n\n      (_a = formGroup === null || formGroup === void 0 ? void 0 : formGroup.get('state')) === null || _a === void 0 ? void 0 : _a.setValue(data[0]);\n    });\n  }\n\n};\nCheckoutComponent = __decorate([Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})], CheckoutComponent);\nexport { CheckoutComponent };","map":null,"metadata":{},"sourceType":"module"}