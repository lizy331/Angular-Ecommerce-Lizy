{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar aCallable = require('../internals/a-callable');\n\nvar aMap = require('../internals/a-map');\n\nvar iterate = require('../internals/map-iterate');\n\nvar $TypeError = TypeError; // `Map.prototype.reduce` method\n// https://github.com/tc39/proposal-collection-methods\n\n$({\n  target: 'Map',\n  proto: true,\n  real: true,\n  forced: true\n}, {\n  reduce: function reduce(callbackfn\n  /* , initialValue */\n  ) {\n    var map = aMap(this);\n    var noInitial = arguments.length < 2;\n    var accumulator = noInitial ? undefined : arguments[1];\n    aCallable(callbackfn);\n    iterate(map, function (value, key) {\n      if (noInitial) {\n        noInitial = false;\n        accumulator = value;\n      } else {\n        accumulator = callbackfn(accumulator, value, key, map);\n      }\n    });\n    if (noInitial) throw $TypeError('Reduce of empty map with no initial value');\n    return accumulator;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}