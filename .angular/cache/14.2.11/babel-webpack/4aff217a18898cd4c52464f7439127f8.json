{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar bind = require('../internals/function-bind-context');\n\nvar aMap = require('../internals/a-map');\n\nvar MapHelpers = require('../internals/map-helpers');\n\nvar iterate = require('../internals/map-iterate');\n\nvar Map = MapHelpers.Map;\nvar set = MapHelpers.set; // `Map.prototype.filter` method\n// https://github.com/tc39/proposal-collection-methods\n\n$({\n  target: 'Map',\n  proto: true,\n  real: true,\n  forced: true\n}, {\n  filter: function filter(callbackfn\n  /* , thisArg */\n  ) {\n    var map = aMap(this);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    var newMap = new Map();\n    iterate(map, function (value, key) {\n      if (boundFunction(value, key, map)) set(newMap, key, value);\n    });\n    return newMap;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}